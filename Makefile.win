# Project: wmawk2
# Makefile created by Embarcadero Dev-C++ 6.3

CPP      = g++.exe
CC       = gcc.exe
WINDRES  = windres.exe
RES      = wmawk2_private.res
OBJ      = array.o bi_funct.o bi_vars.o cast.o code.o da.o error.o execute.o fcall.o field.o files.o fin.o hash.o init.o int.o jmp.o kw.o main.o memory.o parse.o print.o printf.o re_cmpl.o scan.o scancode.o split.o version.o zmalloc.o rexp/rexp.o rexp/rexp0.o rexp/rexp1.o rexp/rexp2.o rexp/rexp3.o rexp/rexpdb.o rexp/wait.o atof.o rand.o unicode.o ya-sprintf.o $(RES)
LINKOBJ  = array.o bi_funct.o bi_vars.o cast.o code.o da.o error.o execute.o fcall.o field.o files.o fin.o hash.o init.o int.o jmp.o kw.o main.o memory.o parse.o print.o printf.o re_cmpl.o scan.o scancode.o split.o version.o zmalloc.o rexp/rexp.o rexp/rexp0.o rexp/rexp1.o rexp/rexp2.o rexp/rexp3.o rexp/rexpdb.o rexp/wait.o atof.o rand.o unicode.o ya-sprintf.o $(RES)
LIBS     = -L"C:/winlibs/winlibs-x86_64-posix-seh-gcc-14.2.0-mingw-w64ucrt-12.0.0-r1/mingw64/lib" -L"C:/winlibs/winlibs-x86_64-posix-seh-gcc-14.2.0-mingw-w64ucrt-12.0.0-r1/mingw64/x86_64-w64-mingw32/lib" -static-libgcc -m64
INCS     = -I"C:/winlibs/winlibs-x86_64-posix-seh-gcc-14.2.0-mingw-w64ucrt-12.0.0-r1/mingw64/include" -I"C:/winlibs/winlibs-x86_64-posix-seh-gcc-14.2.0-mingw-w64ucrt-12.0.0-r1/mingw64/x86_64-w64-mingw32/include" -I"C:/winlibs/winlibs-x86_64-posix-seh-gcc-14.2.0-mingw-w64ucrt-12.0.0-r1/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include"
CXXINCS  = -I"C:/winlibs/winlibs-x86_64-posix-seh-gcc-14.2.0-mingw-w64ucrt-12.0.0-r1/mingw64/include" -I"C:/winlibs/winlibs-x86_64-posix-seh-gcc-14.2.0-mingw-w64ucrt-12.0.0-r1/mingw64/x86_64-w64-mingw32/include" -I"C:/winlibs/winlibs-x86_64-posix-seh-gcc-14.2.0-mingw-w64ucrt-12.0.0-r1/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include"
BIN      = wmawk2.exe
CXXFLAGS = $(CXXINCS) -Ofast -m64 -std=c99 -Wall
CFLAGS   = $(INCS) -Ofast -m64 -std=c99 -Wall -DMAWK
DEL      = C:\Program Files (x86)\Embarcadero\Dev-Cpp\devcpp.exe INTERNAL_DEL

.PHONY: all all-before all-after clean clean-custom

all: all-before $(BIN) all-after

clean: clean-custom
	${DEL} $(OBJ) $(BIN)

$(BIN): $(OBJ)
	$(CC) $(LINKOBJ) -o $(BIN) $(LIBS)

array.o: array.c
	$(CC) -c array.c -o array.o $(CFLAGS)

bi_funct.o: bi_funct.c
	$(CC) -c bi_funct.c -o bi_funct.o $(CFLAGS)

bi_vars.o: bi_vars.c
	$(CC) -c bi_vars.c -o bi_vars.o $(CFLAGS)

cast.o: cast.c
	$(CC) -c cast.c -o cast.o $(CFLAGS)

code.o: code.c
	$(CC) -c code.c -o code.o $(CFLAGS)

da.o: da.c
	$(CC) -c da.c -o da.o $(CFLAGS)

error.o: error.c
	$(CC) -c error.c -o error.o $(CFLAGS)

execute.o: execute.c
	$(CC) -c execute.c -o execute.o $(CFLAGS)

fcall.o: fcall.c
	$(CC) -c fcall.c -o fcall.o $(CFLAGS)

field.o: field.c
	$(CC) -c field.c -o field.o $(CFLAGS)

files.o: files.c
	$(CC) -c files.c -o files.o $(CFLAGS)

fin.o: fin.c
	$(CC) -c fin.c -o fin.o $(CFLAGS)

hash.o: hash.c
	$(CC) -c hash.c -o hash.o $(CFLAGS)

init.o: init.c
	$(CC) -c init.c -o init.o $(CFLAGS)

int.o: int.c
	$(CC) -c int.c -o int.o $(CFLAGS)

jmp.o: jmp.c
	$(CC) -c jmp.c -o jmp.o $(CFLAGS)

kw.o: kw.c
	$(CC) -c kw.c -o kw.o $(CFLAGS)

main.o: main.c
	$(CC) -c main.c -o main.o $(CFLAGS)

memory.o: memory.c
	$(CC) -c memory.c -o memory.o $(CFLAGS)

parse.o: parse.c
	$(CC) -c parse.c -o parse.o $(CFLAGS)

print.o: print.c
	$(CC) -c print.c -o print.o $(CFLAGS)

printf.o: printf.c
	$(CC) -c printf.c -o printf.o $(CFLAGS)

re_cmpl.o: re_cmpl.c
	$(CC) -c re_cmpl.c -o re_cmpl.o $(CFLAGS)

scan.o: scan.c
	$(CC) -c scan.c -o scan.o $(CFLAGS)

scancode.o: scancode.c
	$(CC) -c scancode.c -o scancode.o $(CFLAGS)

split.o: split.c
	$(CC) -c split.c -o split.o $(CFLAGS)

version.o: version.c
	$(CC) -c version.c -o version.o $(CFLAGS)

zmalloc.o: zmalloc.c
	$(CC) -c zmalloc.c -o zmalloc.o $(CFLAGS)

rexp/rexp.o: rexp/rexp.c
	$(CC) -c rexp/rexp.c -o rexp/rexp.o $(CFLAGS)

rexp/rexp0.o: rexp/rexp0.c
	$(CC) -c rexp/rexp0.c -o rexp/rexp0.o $(CFLAGS)

rexp/rexp1.o: rexp/rexp1.c
	$(CC) -c rexp/rexp1.c -o rexp/rexp1.o $(CFLAGS)

rexp/rexp2.o: rexp/rexp2.c
	$(CC) -c rexp/rexp2.c -o rexp/rexp2.o $(CFLAGS)

rexp/rexp3.o: rexp/rexp3.c
	$(CC) -c rexp/rexp3.c -o rexp/rexp3.o $(CFLAGS)

rexp/rexpdb.o: rexp/rexpdb.c
	$(CC) -c rexp/rexpdb.c -o rexp/rexpdb.o $(CFLAGS)

rexp/wait.o: rexp/wait.c
	$(CC) -c rexp/wait.c -o rexp/wait.o $(CFLAGS)

atof.o: atof.c
	$(CC) -c atof.c -o atof.o $(CFLAGS)

rand.o: rand.c
	$(CC) -c rand.c -o rand.o $(CFLAGS)

unicode.o: unicode.c
	$(CC) -c unicode.c -o unicode.o $(CFLAGS)

ya-sprintf.o: ya-sprintf.c
	$(CC) -c ya-sprintf.c -o ya-sprintf.o $(CFLAGS)

wmawk2_private.res: wmawk2_private.rc 
	$(WINDRES) -i wmawk2_private.rc --input-format=rc -o wmawk2_private.res -O coff 

